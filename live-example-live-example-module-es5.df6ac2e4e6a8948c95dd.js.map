{"version":3,"sources":["webpack:///src/app/shared/attribute-utils.ts","webpack:///src/app/custom-elements/live-example/live-example.component.ts.pre-build-optimizer.js","webpack:///src/app/custom-elements/live-example/live-example.component.html","webpack:///src/app/custom-elements/live-example/live-example.component.ts","webpack:///src/app/custom-elements/live-example/live-example.module.ts","webpack:///src/app/custom-elements/live-example/live-example.module.ts.pre-build-optimizer.js"],"names":["getAttrValue","attrs","attr","key","find","a","hasOwnProperty","toLowerCase","boolFromValue","attrValue","def","arguments","length","undefined","trim","_c0","LiveExampleComponent_span_4_p_3_Template","rf","ctx","core","Vb","Gc","Tb","ctx_r118","hc","Ab","mc","zip","xc","LiveExampleComponent_span_4_Template","Qb","Ec","ctx_r115","nc","title","stackblitz","enableDownload","LiveExampleComponent_span_5_Template","ctx_r116","Hc","LiveExampleComponent_span_6_span_3_Template","ctx_r119","LiveExampleComponent_span_6_Template","ctx_r117","EmbeddedStackblitzComponent","LiveExampleComponent","_c1","_c2","LIVE_EXAMPLE_BASE","document_service","ZIP_BASE","live_example_component_LiveExampleComponent","elementRef","location","el","k","nativeElement","attributes","attrMap","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","next","done","value","name","exampleDir","this","getExampleDir","path","stackblitzName","getStackblitzName","mode","getMode","getEnableDownload","getStackblitz","getZip","getTitle","_createClass","textContent","content","match","downloadOnly","isEmbedded","concat","zipName","split","ɵfac","t","Pb","common","g","ɵcmp","Jb","type","selectors","viewQuery","_t","Ac","rc","ec","first","ngContentSelectors","decls","vars","consts","template","lc","kc","directives","m","n","o","live_example_component_EmbeddedStackblitzComponent","encapsulation","_classCallCheck","iframe","src","inputs","styles","__webpack_require__","d","__webpack_exports__","live_example_module_LiveExampleModule","LiveExampleModule","customElementComponent","ɵmod","Nb","ɵinj","Mb","factory","imports","c"],"mappings":"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","file":"live-example-live-example-module-es5.df6ac2e4e6a8948c95dd.js","sourcesContent":["// Utilities for processing HTML element attributes\nimport { ElementRef } from '@angular/core';\n\nexport interface AttrMap {\n  [key: string]: string;\n}\n\n/**\n * Get attribute map from element or ElementRef `attributes`.\n * Attribute map keys are forced lowercase for case-insensitive lookup.\n * @param el The source of the attributes.\n */\nexport function getAttrs(el: HTMLElement | ElementRef): AttrMap {\n  const attrs: NamedNodeMap = el instanceof ElementRef ? el.nativeElement.attributes : el.attributes;\n  const attrMap: AttrMap = {};\n  for (const attr of attrs as any as Attr[] /* cast due to https://github.com/Microsoft/TypeScript/issues/2695 */) {\n    attrMap[attr.name.toLowerCase()] = attr.value;\n  }\n  return attrMap;\n}\n\n/**\n * Return the attribute that matches `attr`.\n * @param attr Name of the attribute or a string of candidate attribute names.\n */\nexport function getAttrValue(attrs: AttrMap, attr: string | string[]): string | undefined {\n  const key = (typeof attr === 'string')\n      ? attr\n      : attr.find(a => attrs.hasOwnProperty(a.toLowerCase()));\n\n  return (key === undefined) ? undefined : attrs[key.toLowerCase()];\n}\n\n/**\n * Return the boolean state of an attribute value (if supplied)\n * @param attrValue The string value of some attribute (or undefined if attribute not present).\n * @param def Default boolean value when attribute is undefined.\n */\nexport function boolFromValue(attrValue: string | undefined, def: boolean = false) {\n  return attrValue === undefined ? def : attrValue.trim() !== 'false';\n}\n\n/**\n * Return the boolean state of attribute from an element\n * @param el The source of the attributes.\n * @param atty Name of the attribute or a string of candidate attribute names.\n * @param def Default boolean value when attribute is undefined.\n */\nexport function getBoolFromAttribute(\n  el: HTMLElement | ElementRef,\n  attr: string | string[],\n  def: boolean = false): boolean {\n  return boolFromValue(getAttrValue(getAttrs(el), attr), def);\n}\n","/* tslint:disable component-selector */\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nimport { boolFromValue, getAttrs, getAttrValue } from 'app/shared/attribute-utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"content\"];\nfunction LiveExampleComponent_span_4_p_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" \\u4F60\\u8FD8\\u53EF\\u4EE5 \");\n    i0.ɵɵelementStart(2, \"a\", 8);\n    i0.ɵɵtext(3, \"\\u4E0B\\u8F7D\\u8FD9\\u4E2A\\u4F8B\\u5B50\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\u3002 \");\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r118 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", ctx_r118.zip, i0.ɵɵsanitizeUrl);\n} }\nfunction LiveExampleComponent_span_4_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelement(2, \"aio-embedded-stackblitz\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, LiveExampleComponent_span_4_p_3_Template, 5, 1, \"p\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r115 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r115.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r115.stackblitz);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r115.enableDownload);\n} }\nfunction LiveExampleComponent_span_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"a\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r116 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r116.title);\n    i0.ɵɵproperty(\"href\", ctx_r116.zip, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r116.title);\n} }\nfunction LiveExampleComponent_span_6_span_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" / \");\n    i0.ɵɵelementStart(2, \"a\", 8);\n    i0.ɵɵtext(3, \"\\u4E0B\\u8F7D\\u8303\\u4F8B\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r119 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"href\", ctx_r119.zip, i0.ɵɵsanitizeUrl);\n} }\nfunction LiveExampleComponent_span_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"a\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, LiveExampleComponent_span_6_span_3_Template, 4, 1, \"span\", 7);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r117 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"title\", ctx_r117.title);\n    i0.ɵɵproperty(\"href\", ctx_r117.stackblitz, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r117.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r117.enableDownload);\n} }\nconst _c1 = [\"*\"];\nconst _c2 = [\"iframe\"];\nconst LIVE_EXAMPLE_BASE = CONTENT_URL_PREFIX + 'live-examples/';\nconst ZIP_BASE = CONTENT_URL_PREFIX + 'zips/';\n/**\n * Angular.io Live Example Embedded Component\n *\n * Renders a link to a live/host example of the doc page.\n *\n * All attributes and the text content are optional\n *\n * Usage:\n *   <live-example\n *      [name=\"...\"]        // name of the example directory\n *      [stackblitz=\"...\"\"] // name of the stackblitz file (becomes part of zip file name as well)\n *      [embedded]          // embed the stackblitz in the doc page, else display in new browser tab (default)\n *      [noDownload]        // no downloadable zip option\n *      [downloadOnly]      // just the zip\n *      [title=\"...\"]>      // text for live example link and tooltip\n *        text              // higher precedence way to specify text for live example link and tooltip\n *  </live-example>\n * Example:\n *   <p>Run <live-example>Try the live example</live-example></p>.\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   <p>Run <live-example name=\"toh-pt1\">this example</live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   // Link to the default stackblitz in the toh-pt1 sample\n *   // The title overrides default (\"live example\") with \"Tour of Heroes - Part 1\"\n *   <p>Run <live-example name=\"toh-pt1\" title=\"Tour of Heroes - Part 1\"></live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   <p>Run <live-example stackblitz=\"minimal\"></live-example></p>.\n *   // ~/resources/live-examples/{page}/minimal.stackblitz.json\n *\n *   // Embed the current page's default stackblitz\n *   // Text within tag is \"live example\"\n *   // No title (no tooltip)\n *   <live-example embedded title=\"\"></live-example>\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   // Displays within the document page as an embedded style stackblitz editor\n *   <live-example name=\"toh-pt1\" embedded stackblitz=\"minimal\">Tour of Heroes - Part 1</live-example>\n *   // ~/resources/live-examples/toh-pt1/minimal.stackblitz.json\n */\nexport class LiveExampleComponent {\n    constructor(elementRef, location) {\n        const attrs = getAttrs(elementRef);\n        const exampleDir = this.getExampleDir(attrs, location.path(false));\n        const stackblitzName = this.getStackblitzName(attrs);\n        this.mode = this.getMode(attrs);\n        this.enableDownload = this.getEnableDownload(attrs);\n        this.stackblitz = this.getStackblitz(exampleDir, stackblitzName, this.mode === 'embedded');\n        this.zip = this.getZip(exampleDir, stackblitzName);\n        this.title = this.getTitle(attrs);\n    }\n    ngAfterContentInit() {\n        // Angular will sanitize this title when displayed, so it should be plain text.\n        const textContent = this.content.nativeElement.textContent.trim();\n        if (textContent) {\n            this.title = textContent;\n        }\n    }\n    getEnableDownload(attrs) {\n        const downloadDisabled = boolFromValue(getAttrValue(attrs, 'noDownload'));\n        return !downloadDisabled;\n    }\n    getExampleDir(attrs, path) {\n        let exampleDir = getAttrValue(attrs, 'name');\n        if (!exampleDir) {\n            // Take the last path segment, excluding query params and hash fragment.\n            const match = path.match(/[^/?#]+(?=\\/?(?:\\?|#|$))/);\n            exampleDir = match ? match[0] : 'index';\n        }\n        return exampleDir.trim();\n    }\n    getMode(attrs) {\n        const downloadOnly = boolFromValue(getAttrValue(attrs, 'downloadOnly'));\n        const isEmbedded = boolFromValue(getAttrValue(attrs, 'embedded'));\n        return downloadOnly ? 'downloadOnly'\n            : isEmbedded ? 'embedded' :\n                'default';\n    }\n    getStackblitz(exampleDir, stackblitzName, isEmbedded) {\n        const urlQuery = isEmbedded ? '?ctl=1' : '';\n        return `${LIVE_EXAMPLE_BASE}${exampleDir}/${stackblitzName}stackblitz.html${urlQuery}`;\n    }\n    getStackblitzName(attrs) {\n        const attrValue = (getAttrValue(attrs, 'stackblitz') || '').trim();\n        return attrValue && `${attrValue}.`;\n    }\n    getTitle(attrs) {\n        return (getAttrValue(attrs, 'title') || '在线例子').trim();\n    }\n    getZip(exampleDir, stackblitzName) {\n        const zipName = exampleDir.split('/')[0];\n        return `${ZIP_BASE}${exampleDir}/${stackblitzName}${zipName}.zip`;\n    }\n}\nLiveExampleComponent.ɵfac = function LiveExampleComponent_Factory(t) { return new (t || LiveExampleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Location)); };\nLiveExampleComponent.ɵcmp = i0.ɵɵdefineComponent({ type: LiveExampleComponent, selectors: [[\"live-example\"]], viewQuery: function LiveExampleComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, ngContentSelectors: _c1, decls: 7, vars: 3, consts: [[2, \"display\", \"none\"], [\"content\", \"\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"title\"], [3, \"src\"], [4, \"ngIf\"], [\"download\", \"\", \"title\", \"\\u4E0B\\u8F7D\\u8303\\u4F8B\", 3, \"href\"], [\"download\", \"\", 3, \"href\", \"title\"], [\"target\", \"_blank\", 3, \"href\", \"title\"]], template: function LiveExampleComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"span\", 0, 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"span\", 2);\n        i0.ɵɵtemplate(4, LiveExampleComponent_span_4_Template, 4, 3, \"span\", 3);\n        i0.ɵɵtemplate(5, LiveExampleComponent_span_5_Template, 3, 3, \"span\", 3);\n        i0.ɵɵtemplate(6, LiveExampleComponent_span_6_Template, 4, 4, \"span\", 4);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.mode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"embedded\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"downloadOnly\");\n    } }, directives: function () { return [i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, EmbeddedStackblitzComponent, i1.NgIf]; }, encapsulation: 2 });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(LiveExampleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'live-example',\n                templateUrl: 'live-example.component.html'\n            }]\n    }], function () { return [{ type: i0.ElementRef }, { type: i1.Location }]; }, { content: [{\n            type: ViewChild,\n            args: ['content', { static: true }]\n        }] }); })();\n///// EmbeddedStackblitzComponent ///\n/**\n * Hides the <iframe> so we can test LiveExampleComponent without actually triggering\n * a call to stackblitz to load the iframe\n */\nexport class EmbeddedStackblitzComponent {\n    ngAfterViewInit() {\n        // DEVELOPMENT TESTING ONLY\n        // this.src = 'https://angular.io/resources/live-examples/quickstart/ts/stackblitz.json';\n        if (this.iframe) {\n            // security: the `src` is always authored by the documentation team\n            // and is considered to be safe\n            this.iframe.nativeElement.src = this.src;\n        }\n    }\n}\nEmbeddedStackblitzComponent.ɵfac = function EmbeddedStackblitzComponent_Factory(t) { return new (t || EmbeddedStackblitzComponent)(); };\nEmbeddedStackblitzComponent.ɵcmp = i0.ɵɵdefineComponent({ type: EmbeddedStackblitzComponent, selectors: [[\"aio-embedded-stackblitz\"]], viewQuery: function EmbeddedStackblitzComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iframe = _t.first);\n    } }, inputs: { src: \"src\" }, decls: 2, vars: 0, consts: [[\"frameborder\", \"0\", \"width\", \"100%\", \"height\", \"100%\"], [\"iframe\", \"\"]], template: function EmbeddedStackblitzComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"iframe\", 0, 1);\n    } }, styles: [\"iframe[_ngcontent-%COMP%] { min-height: 400px; }\"] });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(EmbeddedStackblitzComponent, [{\n        type: Component,\n        args: [{\n                selector: 'aio-embedded-stackblitz',\n                template: `<iframe #iframe frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe>`,\n                styles: ['iframe { min-height: 400px; }']\n            }]\n    }], null, { src: [{\n            type: Input\n        }], iframe: [{\n            type: ViewChild,\n            args: ['iframe', { static: true }]\n        }] }); })();\n","<!-- Content projection is used to get the content HTML provided to the component. -->\n<span #content style=\"display: none\"><ng-content></ng-content></span>\n\n<span [ngSwitch]=\"mode\">\n  <span *ngSwitchCase=\"'embedded'\">\n    <div title=\"{{title}}\">\n      <aio-embedded-stackblitz [src]=\"stackblitz\"></aio-embedded-stackblitz>\n    </div>\n    <p *ngIf=\"enableDownload\">\n      你还可以 <a [href]=\"zip\" download title=\"下载范例\">下载这个例子</a>。\n    </p>\n  </span>\n  <span *ngSwitchCase=\"'downloadOnly'\">\n    <a [href]=\"zip\" download title=\"{{title}}\">{{title}}</a>\n  </span>\n  <span *ngSwitchDefault>\n    <a [href]=\"stackblitz\" target=\"_blank\" title=\"{{title}}\">{{title}}</a>\n    <span *ngIf=\"enableDownload\">\n      / <a [href]=\"zip\" download title=\"下载范例\">下载范例</a>\n    </span>\n  </span>\n</span>\n","/* tslint:disable component-selector */\nimport { AfterContentInit, AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nimport { AttrMap, boolFromValue, getAttrs, getAttrValue } from 'app/shared/attribute-utils';\n\n\nconst LIVE_EXAMPLE_BASE = CONTENT_URL_PREFIX + 'live-examples/';\nconst ZIP_BASE = CONTENT_URL_PREFIX + 'zips/';\n\n/**\n * Angular.io Live Example Embedded Component\n *\n * Renders a link to a live/host example of the doc page.\n *\n * All attributes and the text content are optional\n *\n * Usage:\n *   <live-example\n *      [name=\"...\"]        // name of the example directory\n *      [stackblitz=\"...\"\"] // name of the stackblitz file (becomes part of zip file name as well)\n *      [embedded]          // embed the stackblitz in the doc page, else display in new browser tab (default)\n *      [noDownload]        // no downloadable zip option\n *      [downloadOnly]      // just the zip\n *      [title=\"...\"]>      // text for live example link and tooltip\n *        text              // higher precedence way to specify text for live example link and tooltip\n *  </live-example>\n * Example:\n *   <p>Run <live-example>Try the live example</live-example></p>.\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   <p>Run <live-example name=\"toh-pt1\">this example</live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   // Link to the default stackblitz in the toh-pt1 sample\n *   // The title overrides default (\"live example\") with \"Tour of Heroes - Part 1\"\n *   <p>Run <live-example name=\"toh-pt1\" title=\"Tour of Heroes - Part 1\"></live-example></p>.\n *   // ~/resources/live-examples/toh-pt1/stackblitz.json\n *\n *   <p>Run <live-example stackblitz=\"minimal\"></live-example></p>.\n *   // ~/resources/live-examples/{page}/minimal.stackblitz.json\n *\n *   // Embed the current page's default stackblitz\n *   // Text within tag is \"live example\"\n *   // No title (no tooltip)\n *   <live-example embedded title=\"\"></live-example>\n *   // ~/resources/live-examples/{page}/stackblitz.json\n *\n *   // Displays within the document page as an embedded style stackblitz editor\n *   <live-example name=\"toh-pt1\" embedded stackblitz=\"minimal\">Tour of Heroes - Part 1</live-example>\n *   // ~/resources/live-examples/toh-pt1/minimal.stackblitz.json\n */\n@Component({\n  selector: 'live-example',\n  templateUrl: 'live-example.component.html'\n})\nexport class LiveExampleComponent implements AfterContentInit {\n\n  readonly mode: 'default' | 'embedded' | 'downloadOnly';\n  readonly enableDownload: boolean;\n  readonly stackblitz: string;\n  readonly zip: string;\n  title: string;\n\n  @ViewChild('content', { static: true })\n  private content: ElementRef;\n\n  constructor(elementRef: ElementRef, location: Location) {\n    const attrs = getAttrs(elementRef);\n    const exampleDir = this.getExampleDir(attrs, location.path(false));\n    const stackblitzName = this.getStackblitzName(attrs);\n\n    this.mode = this.getMode(attrs);\n    this.enableDownload = this.getEnableDownload(attrs);\n    this.stackblitz = this.getStackblitz(exampleDir, stackblitzName, this.mode === 'embedded');\n    this.zip = this.getZip(exampleDir, stackblitzName);\n    this.title = this.getTitle(attrs);\n  }\n\n  ngAfterContentInit() {\n    // Angular will sanitize this title when displayed, so it should be plain text.\n    const textContent = this.content.nativeElement.textContent.trim();\n    if (textContent) {\n      this.title = textContent;\n    }\n  }\n\n  private getEnableDownload(attrs: AttrMap) {\n    const downloadDisabled = boolFromValue(getAttrValue(attrs, 'noDownload'));\n    return !downloadDisabled;\n  }\n\n  private getExampleDir(attrs: AttrMap, path: string) {\n    let exampleDir = getAttrValue(attrs, 'name');\n    if (!exampleDir) {\n      // Take the last path segment, excluding query params and hash fragment.\n      const match = path.match(/[^/?#]+(?=\\/?(?:\\?|#|$))/);\n      exampleDir = match ? match[0] : 'index';\n    }\n    return exampleDir.trim();\n  }\n\n  private getMode(this: LiveExampleComponent, attrs: AttrMap): typeof this.mode {\n    const downloadOnly = boolFromValue(getAttrValue(attrs, 'downloadOnly'));\n    const isEmbedded = boolFromValue(getAttrValue(attrs, 'embedded'));\n\n    return downloadOnly ? 'downloadOnly'\n           : isEmbedded ? 'embedded' :\n                          'default';\n  }\n\n  private getStackblitz(exampleDir: string, stackblitzName: string, isEmbedded: boolean) {\n    const urlQuery = isEmbedded ? '?ctl=1' : '';\n    return `${LIVE_EXAMPLE_BASE}${exampleDir}/${stackblitzName}stackblitz.html${urlQuery}`;\n  }\n\n  private getStackblitzName(attrs: AttrMap) {\n    const attrValue = (getAttrValue(attrs, 'stackblitz') || '').trim();\n    return attrValue && `${attrValue}.`;\n  }\n\n  private getTitle(attrs: AttrMap) {\n    return (getAttrValue(attrs, 'title') || '在线例子').trim();\n  }\n\n  private getZip(exampleDir: string, stackblitzName: string) {\n    const zipName = exampleDir.split('/')[0];\n    return `${ZIP_BASE}${exampleDir}/${stackblitzName}${zipName}.zip`;\n  }\n}\n\n///// EmbeddedStackblitzComponent ///\n/**\n * Hides the <iframe> so we can test LiveExampleComponent without actually triggering\n * a call to stackblitz to load the iframe\n */\n@Component({\n  selector: 'aio-embedded-stackblitz',\n  template: `<iframe #iframe frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe>`,\n  styles: [ 'iframe { min-height: 400px; }' ]\n})\nexport class EmbeddedStackblitzComponent implements AfterViewInit {\n  @Input() src: string;\n\n  @ViewChild('iframe', { static: true }) iframe: ElementRef;\n\n  ngAfterViewInit() {\n    // DEVELOPMENT TESTING ONLY\n    // this.src = 'https://angular.io/resources/live-examples/quickstart/ts/stackblitz.json';\n\n    if (this.iframe) {\n      // security: the `src` is always authored by the documentation team\n      // and is considered to be safe\n      this.iframe.nativeElement.src = this.src;\n    }\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmbeddedStackblitzComponent, LiveExampleComponent } from './live-example.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ LiveExampleComponent, EmbeddedStackblitzComponent ],\n  entryComponents: [ LiveExampleComponent ]\n})\nexport class LiveExampleModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = LiveExampleComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmbeddedStackblitzComponent, LiveExampleComponent } from './live-example.component';\nimport * as i0 from \"@angular/core\";\nexport class LiveExampleModule {\n    constructor() {\n        this.customElementComponent = LiveExampleComponent;\n    }\n}\nLiveExampleModule.ɵmod = i0.ɵɵdefineNgModule({ type: LiveExampleModule });\nLiveExampleModule.ɵinj = i0.ɵɵdefineInjector({ factory: function LiveExampleModule_Factory(t) { return new (t || LiveExampleModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(LiveExampleModule, { declarations: [LiveExampleComponent, EmbeddedStackblitzComponent], imports: [CommonModule] }); })();\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(LiveExampleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [LiveExampleComponent, EmbeddedStackblitzComponent],\n                entryComponents: [LiveExampleComponent]\n            }]\n    }], null, null); })();\n"]}