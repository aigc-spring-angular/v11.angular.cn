{"version":3,"sources":["webpack:///src/app/custom-elements/announcement-bar/announcement-bar.component.ts.pre-build-optimizer.js","webpack:///src/app/custom-elements/announcement-bar/announcement-bar.component.ts","webpack:///src/app/custom-elements/announcement-bar/announcement-bar.module.ts","webpack:///src/app/custom-elements/announcement-bar/announcement-bar.module.ts.pre-build-optimizer.js"],"names":["AnnouncementBarComponent_div_0_Template","rf","ctx","core","Vb","Qb","Gc","Tb","ctx_r52","hc","Ab","mc","announcement","imageUrl","xc","message","wc","linkUrl","announcementsPath","document_service","a","announcement_bar_component_AnnouncementBarComponent","AnnouncementBarComponent","[object Object]","http","logger","this","get","pipe","Object","catchError","error","Error","map","announcements","findCurrentAnnouncement","subscribe","filter","Date","startDate","valueOf","now","endDate","ɵfac","t","Pb","logger_service","ɵcmp","Jb","type","selectors","decls","vars","consts","template","Ec","directives","common","k","encapsulation","__webpack_require__","d","__webpack_exports__","announcement_bar_module_AnnouncementBarModule","AnnouncementBarModule","customElementComponent","ɵmod","Nb","ɵinj","Mb","factory","imports","c","shared_module","b"],"mappings":"wMAOA,SAASA,EAAwCC,EAAIC,GAUnD,GAVmE,EAALD,ICuC9DE,EAAAC,GAAA,EAAA,MAAA,GACED,EAAAC,GAAA,EAAA,MAAA,GACED,EAAAE,GAAA,EAAA,MAAA,GACAF,EAAAE,GAAA,EAAA,IAAA,GACAF,EAAAC,GAAA,EAAA,IAAA,GAAgDD,EAAAG,GAAA,EAAA,cAAUH,EAAAI,KAC5DJ,EAAAI,KACFJ,EAAAI,MDnCS,EAALN,EAAQ,CACV,MAAMO,EAAUL,EAAAM,KC8BTN,EAAAO,GAAA,GAAAP,EAAAQ,GAAA,MAAAH,EAAAI,aAAAC,SAAAV,EAAAW,IACFX,EAAAO,GAAA,GAAAP,EAAAQ,GAAA,YAAAH,EAAAI,aAAAG,QAAAZ,EAAAa,IACeb,EAAAO,GAAA,GAAAP,EAAAQ,GAAA,OAAAH,EAAAI,aAAAK,QAAAd,EAAAW,KA7CxB,MAAMI,EAAoBC,EAAAC,EAAqB,qBAiDxC,IAAAC,EAAA,YAAMC,EAGXC,YAAoBC,EAA0BC,GAA1BC,KAAAF,KAAAA,EAA0BE,KAAAD,OAAAA,EAE9CF,WACEG,KAAKF,KAAKG,IAAoBT,GAC3BU,KACCC,OAAAC,EAAAV,EAAAS,CAAWE,IACTL,KAAKD,OAAOM,MAAM,IAAIC,MAAM,GAAGd,qBAAqCa,EAAMhB,YACnE,KAETc,OAAAI,EAAAb,EAAAS,CAAIK,GAAiBR,KAAKS,wBAAwBD,IAClDL,OAAAC,EAAAV,EAAAS,CAAWE,IACTL,KAAKD,OAAOM,MAAM,IAAIC,MAAM,GAAGd,4BAA4Ca,EAAMhB,YAC1E,MAGVqB,UAAUxB,GAAgBc,KAAKd,aAAeA,GAM3CW,wBAAwBW,GAC9B,OAAOA,EACJG,OAAOzB,GAAgB,IAAI0B,KAAK1B,EAAa2B,WAAWC,UAAYF,KAAKG,OACzEJ,OAAOzB,GAAgB,IAAI0B,KAAK1B,EAAa8B,SAASF,UAAYF,KAAKG,OACvE,WDFPnB,EAAyBqB,UAAO,SAA0CC,GAAK,OAAO,IAAKA,GC1B9EtB,GAAwBnB,EAAA0C,GAAArB,EAAAJ,GAAAjB,EAAA0C,GAAAC,EAAA1B,KD2BrCE,EAAyByB,UAAO5C,EAAA6C,GAAqB,CAAEC,KC3B1C3B,EAAwB4B,UAAA,CAAA,CAAA,yBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,QAAA,qBAAA,EAAA,QAAA,CAAA,EAAA,sBAAA,CAAA,EAAA,oBAAA,CAAA,MAAA,GAAA,EAAA,OAAA,CAAA,EAAA,aAAA,CAAA,EAAA,SAAA,EAAA,SAAAC,SAAA,SAAArD,EAAAC,GAAA,EAAAD,GARnCE,EAAAoD,GAAA,EAAAvD,EAAA,EAAA,EAAA,MAAA,GDqCa,EAALC,GCrCwBE,EAAAQ,GAAA,OAAAT,EAAAU,eDuCzB4C,WAAY,CAACC,EAAAC,GAAUC,cAAe,OC/BxC,GCtDPC,EAAAC,EAAAC,EAAA,yBAAA,WAAA,OAAAC,KAYO,IAAAA,EAAA,YAAMC,EALbzC,cAMEG,KAAAuC,uBAAoC5C,UCFtC2C,EAAsBE,UAAO/D,EAAAgE,GAAoB,CAAElB,KDCtCe,ICAbA,EAAsBI,UAAOjE,EAAAkE,GAAoB,CAAEC,QAAS,SAAuC1B,GAAK,OAAO,IAAKA,GDAvGoB,IAAqBO,QAAA,CAJvB,CAAEd,EAAAe,EAAcC,EAAArD,EAAcI,EAAAkD,SAIlC","file":"announcement-bar-announcement-bar-module-es2015.42ff0b6e5aa6620c6acf.js","sourcesContent":["import { Component } from '@angular/core';\nimport { catchError, map } from 'rxjs/operators';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/shared/logger.service\";\nimport * as i3 from \"@angular/common\";\nfunction AnnouncementBarComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelement(2, \"img\", 3);\n    i0.ɵɵelement(3, \"p\", 4);\n    i0.ɵɵelementStart(4, \"a\", 5);\n    i0.ɵɵtext(5, \"Learn More\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r52 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r52.announcement.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r52.announcement.message, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"href\", ctx_r52.announcement.linkUrl, i0.ɵɵsanitizeUrl);\n} }\nconst announcementsPath = CONTENT_URL_PREFIX + 'announcements.json';\n/**\n * Display the latest live announcement. This is used on the homepage.\n *\n * The data for the announcements is kept in `aio/content/marketing/announcements.json`.\n *\n * The format for that data file looks like:\n *\n * ```\n * [\n *   {\n *     \"startDate\": \"2018-02-01\",\n *     \"endDate\": \"2018-03-01\",\n *     \"message\": \"This is an <b>important</b> announcement\",\n *     \"imageUrl\": \"url/to/image\",\n *     \"linkUrl\": \"url/to/website\"\n *   },\n *   ...\n * ]\n * ```\n *\n * Only one announcement will be shown at any time. This is determined as the first \"live\"\n * announcement in the file, where \"live\" means that its start date is before today, and its\n * end date is after today.\n *\n * **Security Note:**\n * The `message` field can contain unsanitized HTML but this field should only updated by\n * verified members of the Angular team.\n */\nexport class AnnouncementBarComponent {\n    constructor(http, logger) {\n        this.http = http;\n        this.logger = logger;\n    }\n    ngOnInit() {\n        this.http.get(announcementsPath)\n            .pipe(catchError(error => {\n            this.logger.error(new Error(`${announcementsPath} request failed: ${error.message}`));\n            return [];\n        }), map(announcements => this.findCurrentAnnouncement(announcements)), catchError(error => {\n            this.logger.error(new Error(`${announcementsPath} contains invalid data: ${error.message}`));\n            return [];\n        }))\n            .subscribe(announcement => this.announcement = announcement);\n    }\n    /**\n     * Get the first date in the list that is \"live\" now\n     */\n    findCurrentAnnouncement(announcements) {\n        return announcements\n            .filter(announcement => new Date(announcement.startDate).valueOf() < Date.now())\n            .filter(announcement => new Date(announcement.endDate).valueOf() > Date.now())[0];\n    }\n}\nAnnouncementBarComponent.ɵfac = function AnnouncementBarComponent_Factory(t) { return new (t || AnnouncementBarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Logger)); };\nAnnouncementBarComponent.ɵcmp = i0.ɵɵdefineComponent({ type: AnnouncementBarComponent, selectors: [[\"aio-announcement-bar\"]], decls: 1, vars: 1, consts: [[\"class\", \"homepage-container\", 4, \"ngIf\"], [1, \"homepage-container\"], [1, \"announcement-bar\"], [\"alt\", \"\", 3, \"src\"], [3, \"innerHTML\"], [1, \"button\", 3, \"href\"]], template: function AnnouncementBarComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵtemplate(0, AnnouncementBarComponent_div_0_Template, 6, 3, \"div\", 0);\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.announcement);\n    } }, directives: [i3.NgIf], encapsulation: 2 });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(AnnouncementBarComponent, [{\n        type: Component,\n        args: [{\n                selector: 'aio-announcement-bar',\n                template: `\n  <div class=\"homepage-container\" *ngIf=\"announcement\">\n    <div class=\"announcement-bar\">\n      <img [src]=\"announcement.imageUrl\" alt=\"\">\n      <p [innerHTML]=\"announcement.message\"></p>\n      <a class=\"button\" [href]=\"announcement.linkUrl\">Learn More</a>\n    </div>\n  </div>`\n            }]\n    }], function () { return [{ type: i1.HttpClient }, { type: i2.Logger }]; }, null); })();\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { Logger } from 'app/shared/logger.service';\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\nconst announcementsPath = CONTENT_URL_PREFIX + 'announcements.json';\n\nexport interface Announcement {\n  imageUrl: string;\n  message: string;\n  linkUrl: string;\n  startDate: string;\n  endDate: string;\n}\n\n/**\n * Display the latest live announcement. This is used on the homepage.\n *\n * The data for the announcements is kept in `aio/content/marketing/announcements.json`.\n *\n * The format for that data file looks like:\n *\n * ```\n * [\n *   {\n *     \"startDate\": \"2018-02-01\",\n *     \"endDate\": \"2018-03-01\",\n *     \"message\": \"This is an <b>important</b> announcement\",\n *     \"imageUrl\": \"url/to/image\",\n *     \"linkUrl\": \"url/to/website\"\n *   },\n *   ...\n * ]\n * ```\n *\n * Only one announcement will be shown at any time. This is determined as the first \"live\"\n * announcement in the file, where \"live\" means that its start date is before today, and its\n * end date is after today.\n *\n * **Security Note:**\n * The `message` field can contain unsanitized HTML but this field should only updated by\n * verified members of the Angular team.\n */\n@Component({\n  selector: 'aio-announcement-bar',\n  template: `\n  <div class=\"homepage-container\" *ngIf=\"announcement\">\n    <div class=\"announcement-bar\">\n      <img [src]=\"announcement.imageUrl\" alt=\"\">\n      <p [innerHTML]=\"announcement.message\"></p>\n      <a class=\"button\" [href]=\"announcement.linkUrl\">Learn More</a>\n    </div>\n  </div>`\n})\nexport class AnnouncementBarComponent implements OnInit {\n  announcement: Announcement;\n\n  constructor(private http: HttpClient, private logger: Logger) {}\n\n  ngOnInit() {\n    this.http.get<Announcement[]>(announcementsPath)\n      .pipe(\n        catchError(error => {\n          this.logger.error(new Error(`${announcementsPath} request failed: ${error.message}`));\n          return [];\n        }),\n        map(announcements => this.findCurrentAnnouncement(announcements)),\n        catchError(error => {\n          this.logger.error(new Error(`${announcementsPath} contains invalid data: ${error.message}`));\n          return [];\n        }),\n      )\n      .subscribe(announcement => this.announcement = announcement);\n  }\n\n  /**\n   * Get the first date in the list that is \"live\" now\n   */\n  private findCurrentAnnouncement(announcements: Announcement[]) {\n    return announcements\n      .filter(announcement => new Date(announcement.startDate).valueOf() < Date.now())\n      .filter(announcement => new Date(announcement.endDate).valueOf() > Date.now())\n      [0];\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AnnouncementBarComponent } from './announcement-bar.component';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, SharedModule, HttpClientModule ],\n  declarations: [ AnnouncementBarComponent ],\n  entryComponents: [ AnnouncementBarComponent ],\n})\nexport class AnnouncementBarModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = AnnouncementBarComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AnnouncementBarComponent } from './announcement-bar.component';\nimport * as i0 from \"@angular/core\";\nexport class AnnouncementBarModule {\n    constructor() {\n        this.customElementComponent = AnnouncementBarComponent;\n    }\n}\nAnnouncementBarModule.ɵmod = i0.ɵɵdefineNgModule({ type: AnnouncementBarModule });\nAnnouncementBarModule.ɵinj = i0.ɵɵdefineInjector({ factory: function AnnouncementBarModule_Factory(t) { return new (t || AnnouncementBarModule)(); }, imports: [[CommonModule, SharedModule, HttpClientModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AnnouncementBarModule, { declarations: [AnnouncementBarComponent], imports: [CommonModule, SharedModule, HttpClientModule] }); })();\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(AnnouncementBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, SharedModule, HttpClientModule],\n                declarations: [AnnouncementBarComponent],\n                entryComponents: [AnnouncementBarComponent],\n            }]\n    }], null, null); })();\n"]}