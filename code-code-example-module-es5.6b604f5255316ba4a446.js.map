{"version":3,"sources":["webpack:///src/app/custom-elements/code/code-example.component.ts.pre-build-optimizer.js","webpack:///src/app/custom-elements/code/code-example.component.ts","webpack:///src/app/custom-elements/code/code-example.module.ts","webpack:///src/app/custom-elements/code/code-example.module.ts.pre-build-optimizer.js"],"names":["_c0","CodeExampleComponent_header_3_Template","rf","ctx","core","Vb","Gc","Tb","ctx_r108","hc","Ab","Hc","header","CodeExampleComponent","_c1","code_example_component_CodeExampleComponent","_classCallCheck","this","_path","isAvoid","_createClass","key","value","aioCode","code","content","nativeElement","innerHTML","set","_header","classes","headed-code","simple-code","get","path","indexOf","hidecopy","_hidecopy","concat","ɵfac","t","ɵcmp","Jb","type","selectors","viewQuery","_t","Ac","code_component","a","rc","ec","first","hostBindings","elIndex","Bb","Fb","inputs","language","linenums","region","hyphenatedHideCopy","capitalizedHideCopy","ngContentSelectors","decls","vars","consts","template","lc","kc","Ec","Qb","mc","directives","common","k","i","encapsulation","__webpack_require__","d","__webpack_exports__","code_example_module_CodeExampleModule","CodeExampleModule","customElementComponent","ɵmod","Nb","ɵinj","Mb","factory","imports","c","code_module"],"mappings":"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","file":"code-code-example-module-es5.6b604f5255316ba4a446.js","sourcesContent":["/* tslint:disable component-selector */\nimport { Component, HostBinding, ViewChild, Input } from '@angular/core';\nimport { CodeComponent } from './code.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./code.component\";\nconst _c0 = [\"content\"];\nfunction CodeExampleComponent_header_3_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"header\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r108 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r108.header);\n} }\nconst _c1 = [\"*\"];\n/**\n * An embeddable code block that displays nicely formatted code.\n * Example usage:\n *\n * ```\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\n * // a code block\n * console.log('do stuff');\n * </code-example>\n * ```\n */\nexport class CodeExampleComponent {\n    constructor() {\n        this._path = '';\n        this.isAvoid = false;\n    }\n    set header(header) {\n        this._header = header;\n        this.classes = {\n            'headed-code': !!this.header,\n            'simple-code': !this.header,\n        };\n    }\n    get header() { return this._header; }\n    set path(path) {\n        this._path = path;\n        this.isAvoid = this.path.indexOf('.avoid.') !== -1;\n    }\n    get path() { return this._path; }\n    set hidecopy(hidecopy) {\n        // Coerce the boolean value.\n        this._hidecopy = hidecopy != null && `${hidecopy}` !== 'false';\n    }\n    get hidecopy() { return this._hidecopy; }\n    set hyphenatedHideCopy(hidecopy) {\n        this.hidecopy = hidecopy;\n    }\n    set capitalizedHideCopy(hidecopy) {\n        this.hidecopy = hidecopy;\n    }\n    ngAfterViewInit() {\n        this.aioCode.code = this.content.nativeElement.innerHTML;\n    }\n}\nCodeExampleComponent.ɵfac = function CodeExampleComponent_Factory(t) { return new (t || CodeExampleComponent)(); };\nCodeExampleComponent.ɵcmp = i0.ɵɵdefineComponent({ type: CodeExampleComponent, selectors: [[\"code-example\"]], viewQuery: function CodeExampleComponent_Query(rf, ctx) { if (rf & 1) {\n        i0.ɵɵstaticViewQuery(_c0, true);\n        i0.ɵɵstaticViewQuery(CodeComponent, true);\n    } if (rf & 2) {\n        var _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.aioCode = _t.first);\n    } }, hostBindings: function CodeExampleComponent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {\n        i0.ɵɵallocHostVars(1);\n    } if (rf & 2) {\n        i0.ɵɵclassProp(\"avoidFile\", ctx.isAvoid);\n    } }, inputs: { language: \"language\", linenums: \"linenums\", region: \"region\", header: \"header\", path: \"path\", hidecopy: \"hidecopy\", hyphenatedHideCopy: [\"hide-copy\", \"hyphenatedHideCopy\"], capitalizedHideCopy: [\"hideCopy\", \"capitalizedHideCopy\"] }, ngContentSelectors: _c1, decls: 5, vars: 8, consts: [[2, \"display\", \"none\"], [\"content\", \"\"], [4, \"ngIf\"], [3, \"ngClass\", \"language\", \"linenums\", \"path\", \"region\", \"hideCopy\", \"header\"]], template: function CodeExampleComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, CodeExampleComponent_header_3_Template, 2, 1, \"header\", 2);\n        i0.ɵɵelement(4, \"aio-code\", 3);\n    } if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.header);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.classes)(\"language\", ctx.language)(\"linenums\", ctx.linenums)(\"path\", ctx.path)(\"region\", ctx.region)(\"hideCopy\", ctx.hidecopy)(\"header\", ctx.header);\n    } }, directives: [i1.NgIf, i2.CodeComponent, i1.NgClass], encapsulation: 2 });\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(CodeExampleComponent, [{\n        type: Component,\n        args: [{\n                selector: 'code-example',\n                template: `\n    <!-- Content projection is used to get the content HTML provided to this component -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <header *ngIf=\"header\">{{header}}</header>\n\n    <aio-code [ngClass]=\"classes\"\n              [language]=\"language\"\n              [linenums]=\"linenums\"\n              [path]=\"path\"\n              [region]=\"region\"\n              [hideCopy]=\"hidecopy\"\n              [header]=\"header\">\n    </aio-code>\n  `,\n            }]\n    }], null, { language: [{\n            type: Input\n        }], linenums: [{\n            type: Input\n        }], region: [{\n            type: Input\n        }], header: [{\n            type: Input\n        }], path: [{\n            type: Input\n        }], hidecopy: [{\n            type: Input\n        }], hyphenatedHideCopy: [{\n            type: Input,\n            args: ['hide-copy']\n        }], capitalizedHideCopy: [{\n            type: Input,\n            args: ['hideCopy']\n        }], isAvoid: [{\n            type: HostBinding,\n            args: ['class.avoidFile']\n        }], content: [{\n            type: ViewChild,\n            args: ['content', { static: true }]\n        }], aioCode: [{\n            type: ViewChild,\n            args: [CodeComponent, { static: true }]\n        }] }); })();\n","/* tslint:disable component-selector */\nimport { Component, HostBinding, ElementRef, ViewChild, Input, AfterViewInit } from '@angular/core';\nimport { CodeComponent } from './code.component';\n\n/**\n * An embeddable code block that displays nicely formatted code.\n * Example usage:\n *\n * ```\n * <code-example language=\"ts\" linenums=\"2\" class=\"special\" header=\"Do Stuff\">\n * // a code block\n * console.log('do stuff');\n * </code-example>\n * ```\n */\n@Component({\n  selector: 'code-example',\n  template: `\n    <!-- Content projection is used to get the content HTML provided to this component -->\n    <div #content style=\"display: none\"><ng-content></ng-content></div>\n\n    <header *ngIf=\"header\">{{header}}</header>\n\n    <aio-code [ngClass]=\"classes\"\n              [language]=\"language\"\n              [linenums]=\"linenums\"\n              [path]=\"path\"\n              [region]=\"region\"\n              [hideCopy]=\"hidecopy\"\n              [header]=\"header\">\n    </aio-code>\n  `,\n})\nexport class CodeExampleComponent implements AfterViewInit {\n  classes: {};\n\n  @Input() language: string;\n\n  @Input() linenums: string;\n\n  @Input() region: string;\n\n  @Input()\n  set header(header: string) {\n    this._header = header;\n    this.classes = {\n      'headed-code': !!this.header,\n      'simple-code': !this.header,\n    };\n  }\n  get header(): string { return this._header; }\n  private _header: string;\n\n  @Input()\n  set path(path: string) {\n    this._path = path;\n    this.isAvoid = this.path.indexOf('.avoid.') !== -1;\n  }\n  get path(): string { return this._path; }\n  private _path = '';\n\n  @Input()\n  set hidecopy(hidecopy: boolean) {\n    // Coerce the boolean value.\n    this._hidecopy = hidecopy != null && `${hidecopy}` !== 'false';\n  }\n  get hidecopy(): boolean { return this._hidecopy; }\n  private _hidecopy: boolean;\n\n  @Input('hide-copy')\n  set hyphenatedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  @Input('hideCopy')\n  set capitalizedHideCopy(hidecopy: boolean) {\n    this.hidecopy = hidecopy;\n  }\n\n  @HostBinding('class.avoidFile') isAvoid = false;\n\n  @ViewChild('content', { static: true }) content: ElementRef;\n\n  @ViewChild(CodeComponent, { static: true }) aioCode: CodeComponent;\n\n  ngAfterViewInit() {\n    this.aioCode.code = this.content.nativeElement.innerHTML;\n  }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeExampleComponent } from './code-example.component';\nimport { CodeModule } from './code.module';\nimport { WithCustomElementComponent } from '../element-registry';\n\n@NgModule({\n  imports: [ CommonModule, CodeModule ],\n  declarations: [ CodeExampleComponent ],\n  exports: [ CodeExampleComponent ],\n  entryComponents: [ CodeExampleComponent ]\n})\nexport class CodeExampleModule implements WithCustomElementComponent {\n  customElementComponent: Type<any> = CodeExampleComponent;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeExampleComponent } from './code-example.component';\nimport { CodeModule } from './code.module';\nimport * as i0 from \"@angular/core\";\nexport class CodeExampleModule {\n    constructor() {\n        this.customElementComponent = CodeExampleComponent;\n    }\n}\nCodeExampleModule.ɵmod = i0.ɵɵdefineNgModule({ type: CodeExampleModule });\nCodeExampleModule.ɵinj = i0.ɵɵdefineInjector({ factory: function CodeExampleModule_Factory(t) { return new (t || CodeExampleModule)(); }, imports: [[CommonModule, CodeModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CodeExampleModule, { declarations: [CodeExampleComponent], imports: [CommonModule, CodeModule], exports: [CodeExampleComponent] }); })();\n/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(CodeExampleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CodeModule],\n                declarations: [CodeExampleComponent],\n                exports: [CodeExampleComponent],\n                entryComponents: [CodeExampleComponent]\n            }]\n    }], null, null); })();\n"]}